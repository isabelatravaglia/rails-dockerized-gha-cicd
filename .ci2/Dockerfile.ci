ARG RUBY_VERSION=2.7.2
FROM ruby:$RUBY_VERSION-slim-buster

ARG PG_MAJOR=13
ARG NODE_MAJOR=12
ARG BUNDLER_VERSION=2.1.4
ARG YARN_VERSION=1.22.5

ARG UID=1000
ARG GID=1000
ARG USER="ruby"

# Common dependencies
RUN apt-get update -qq \
  && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \
    build-essential \
    gnupg2 \
    curl \
    less \
    git \
    sudo \
    iproute2 \
  && apt-get clean \
  && rm -rf /var/cache/apt/archives/* \
  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
  && truncate -s 0 /var/log/*log
  # && addgroup --gid $APP_GROUP_GID --system $APP_GROUP \
  # && adduser --system --shell /sbin/nologin -u $APP_USER_UID $APP_USER \
  # && adduser $APP_USER $APP_GROUP 

# Add PostgreSQL to sources list
RUN curl -sSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
  && echo 'deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list

# Add NodeJS to sources list
RUN curl -sL https://deb.nodesource.com/setup_$NODE_MAJOR.x | bash -

# Add Yarn to the sources list
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
  && echo 'deb http://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list

# Install dependencies
RUN apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get -yq dist-upgrade && \
  DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \
    libpq-dev \
    postgresql-client-$PG_MAJOR \
    nodejs \
    yarn=$YARN_VERSION-1 \
    vim && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    truncate -s 0 /var/log/*log

# Configure non-root user based on https://hint.io/blog/rails-development-with-docker
RUN groupadd -g $GID $USER && \
useradd -u $UID -g $USER -m $USER && \
usermod -p "*" $USER && \
usermod -aG sudo $USER && \
echo "$USER ALL=NOPASSWD: ALL" >> /etc/sudoers.d/50-$USER


RUN mkdir -p /app && chown $USER:$USER /app
WORKDIR /app

# Configure bundler
ENV LANG=C.UTF-8 \
  BUNDLE_JOBS=4 \
  BUNDLE_RETRY=3

RUN gem install bundler -v $BUNDLER_VERSION

COPY --chown=$USER:$USER Gemfile /app/Gemfile
COPY --chown=$USER:$USER Gemfile.lock /app/Gemfile.lock
COPY --chown=$USER:$USER package.json /app/package.json
COPY --chown=$USER:$USER yarn.lock /app/yarn.lock

USER $USER

RUN bundle install
RUN yarn install

COPY --chown=$USER:$USER . /app

# Add a script to be executed every time the container starts.
COPY .ci2/entrypoint.sh /usr/bin/
RUN sudo chmod +x /usr/bin/entrypoint.sh

ENTRYPOINT ["entrypoint.sh"]

ENV PATH /app/bin:$PATH